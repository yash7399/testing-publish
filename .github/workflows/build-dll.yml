name: Build and Publish DLLs (using publishproj)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build website using publishproj
        run: |
          echo "ðŸ”§ Building using website.publishproj..."
          msbuild "testing-publish\testing-publish.website.publishproj" ^
            /p:Configuration=Release ^
            /p:VisualStudioVersion=17.0 ^
            /p:WebPublishTargetsVersion=17.0 ^
            /p:VSToolsPath="C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Microsoft\VisualStudio\v17.0" ^
            /p:DeployOnBuild=true /p:PublishProfile=Release
        shell: cmd

      - name: Copy generated DLLs into SMSInterface/dlls
        shell: pwsh
        run: |
          $src = "testing-publish\testing-publish.publish\SMSInterface\bin"
          $dest = "SMSInterface/dlls"
          if (Test-Path $dest) { Remove-Item -Recurse -Force $dest }
          New-Item -ItemType Directory -Path $dest | Out-Null
          Copy-Item "$src\*.dll" $dest -Force -Recurse
          Write-Host "âœ… Copied all DLLs to $dest"

      - name: Configure Git user
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"

      - name: Create new branch from master and commit DLLs
        shell: pwsh
        run: |
          $branchName = "dlls-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
          git fetch origin master
          git checkout -b $branchName origin/master
          git add SMSInterface/dlls
          git commit -m "Add compiled DLLs [skip ci]" || echo "No changes to commit"
          git push origin $branchName
          Write-Host "âœ… Pushed branch: $branchName"
