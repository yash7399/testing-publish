name: Build Website and Commit DLLs to New Branch

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write    # allow pushing new branch

jobs:
  build-and-commit:
    runs-on: windows-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build Website (website.publishproj)
        run: |
          msbuild "SMSInterface\\website.publishproj" ^
            /p:Configuration=Release ^
            /p:Platform="Any CPU" ^
            /p:WebProjectOutputDir="$(Build.ArtifactStagingDirectory)\\PublishedWebsite\\" ^
            /p:DeleteExistingFiles=True
        shell: cmd

      - name: Create target dlls folder inside SMSInterface
        run: |
          if (!(Test-Path -Path "SMSInterface\\dlls")) { New-Item -ItemType Directory -Path "SMSInterface\\dlls" | Out-Null }
        shell: pwsh

      - name: Copy all generated DLLs into SMSInterface/dlls
        run: |
          $dest = "SMSInterface\\dlls"
          # find all dlls but exclude any inside the dlls folder itself
          Get-ChildItem -Path . -Filter *.dll -Recurse | Where-Object {
            $_.FullName -notmatch [regex]::Escape($dest)
          } | ForEach-Object {
            Copy-Item -Path $_.FullName -Destination $dest -Force
          }

          Write-Host "âœ… Copied DLLs to $dest:"
          Get-ChildItem -Path $dest
        shell: pwsh

      - name: Show git status (debug)
        run: git status --porcelain && git rev-parse --abbrev-ref HEAD

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create new branch and commit DLLs
        id: commit
        run: |
          $branch = "add-dlls-" + (Get-Date).ToString("yyyyMMdd-HHmmss")
          Write-Host "Creating branch: $branch"
          # create and checkout new branch from current main
          git checkout -b $branch
          git add "SMSInterface/dlls"
          $commitResult = ""
          try {
            git commit -m "Add built DLLs to SMSInterface/dlls [skip ci]" | Out-Null
            $commitResult = "committed"
          } catch {
            Write-Host "No changes to commit"
            $commitResult = "no-changes"
          }
          Write-Host "Pushing branch $branch to origin"
          git push origin "HEAD:refs/heads/$branch"
          Write-Output "branch=$branch`nstatus=$commitResult" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8
        shell: pwsh

      - name: Upload DLLs as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: built-dlls
          path: SMSInterface/dlls

      - name: Print result
        run: |
          echo "New branch created: ${{ steps.commit.outputs.branch }}"
          echo "Commit status: ${{ steps.commit.outputs.status }}"
