name: Build Website and Add DLLs (No Overwrite)

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: windows-latest

    steps:
      - name: Checkout repository (with write access)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build Website
        run: |
          msbuild "SMSInterface\\website.publishproj" ^
            /p:Configuration=Release ^
            /p:Platform="Any CPU" ^
            /p:WebProjectOutputDir="PublishedWebsite\\" ^
            /p:DeleteExistingFiles=True
        shell: cmd

      - name: Ensure Bin folder exists
        run: |
          if (-not (Test-Path -Path "SMSInterface\\Bin")) {
            New-Item -ItemType Directory -Path "SMSInterface\\Bin" | Out-Null
          }
        shell: pwsh

      - name: Copy DLLs to Bin (skip existing)
        run: |
          $src1 = "PublishedWebsite\\bin"
          if (Test-Path $src1) {
            Get-ChildItem -Path $src1 -Filter *.dll -Recurse | ForEach-Object {
              $targetPath = Join-Path "SMSInterface\\Bin" $_.Name
              if (-not (Test-Path $targetPath)) {
                Copy-Item -Path $_.FullName -Destination $targetPath
                Write-Host "Added new DLL: $($_.Name)"
              } else {
                Write-Host "Skipped existing DLL: $($_.Name)"
              }
            }
          }
          # fallback for any other DLLs found in the project
          Get-ChildItem -Path . -Filter *.dll -Recurse | Where-Object { $_.FullName -notlike "*\\.git\\*" } | ForEach-Object {
            $targetPath = Join-Path "SMSInterface\\Bin" $_.Name
            if (-not (Test-Path $targetPath)) {
              Copy-Item -Path $_.FullName -Destination $targetPath
              Write-Host "Added extra DLL: $($_.Name)"
            } else {
              Write-Host "Skipped existing DLL: $($_.Name)"
            }
          }
        shell: pwsh

      - name: Show DLLs in Bin
        run: Get-ChildItem -Path "SMSInterface\\Bin" -Recurse | Select-Object Name, Length
        shell: pwsh

      - name: Commit and Push new DLLs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add SMSInterface/Bin
          $status = git status --porcelain
          if ($status) {
            git commit -m "Add new DLLs to SMSInterface/Bin [skip ci]"
            git push origin HEAD:master
          } else {
            Write-Host "No new DLLs to commit."
          }
        shell: pwsh
