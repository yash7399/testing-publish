name: Build and Publish DLLs

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ASP.NET Website and Commit DLLs
    runs-on: windows-latest

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build Website (publish) using website.publishproj
        shell: cmd
        run: |
          msbuild "SMSInterface\website.publishproj" ^
            /p:Configuration=Release ^
            /p:Platform="Any CPU" ^
            /p:WebProjectOutputDir="$(Build.ArtifactStagingDirectory)\PublishedWebsite\" ^
            /p:DeleteExistingFiles=True

      - name: Prepare destination folder SMSInterface/dlls
        shell: pwsh
        run: |
          $dest = "SMSInterface/dlls"
          if (Test-Path $dest) {
            Remove-Item -Path $dest -Recurse -Force -ErrorAction SilentlyContinue
          }
          New-Item -ItemType Directory -Path $dest | Out-Null
          Write-Host "Prepared $dest"

      - name: Copy generated DLLs into SMSInterface/dlls (exclude destination)
        shell: pwsh
        run: |
          $dest = "SMSInterface/dlls"
          $destFull = (Resolve-Path $dest).Path
          $dlls = Get-ChildItem -Path . -Filter *.dll -Recurse -ErrorAction SilentlyContinue | Where-Object { $_.FullName -notmatch [regex]::Escape($destFull) }

          if (-not $dlls) {
            Write-Host "⚠️ No DLLs found to copy."
            exit 0
          }

          foreach ($dll in $dlls) {
            Copy-Item -Path $dll.FullName -Destination $dest -Force
            Write-Host "Copied $($dll.FullName) → $dest"
          }

          Write-Host "✅ DLLs copied successfully into $dest"

      - name: Configure Git user
        shell: pwsh
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create new branch from master and commit DLLs
        shell: pwsh
        run: |
          git fetch origin master:refs/remotes/origin/master
          $branch = "dlls-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
          git checkout -b $branch origin/master

          git add --force "SMSInterface/dlls"
          if (git diff --cached --quiet) {
            Write-Host "⚠️ No new DLLs to commit."
          } else {
            git commit -m "Add compiled DLLs into SMSInterface/dlls [skip ci]"
            git push -u origin $branch
            Write-Host "✅ Pushed branch: $branch"
          }

      - name: Upload DLLs as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: built-dlls
          path: SMSInterface/dlls
